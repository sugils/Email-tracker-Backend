-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.campaign_groups
(
    campaign_group_id uuid NOT NULL DEFAULT gen_random_uuid(),
    campaign_id uuid NOT NULL,
    group_id uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    is_active boolean DEFAULT true,
    CONSTRAINT campaign_groups_pkey PRIMARY KEY (campaign_group_id),
    CONSTRAINT unique_campaign_group UNIQUE (campaign_id, group_id)
);

CREATE TABLE IF NOT EXISTS public.campaign_recipients
(
    campaign_recipient_id uuid NOT NULL DEFAULT gen_random_uuid(),
    campaign_id uuid NOT NULL,
    recipient_id uuid NOT NULL,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    is_active boolean DEFAULT true,
    CONSTRAINT campaign_recipients_pkey PRIMARY KEY (campaign_recipient_id),
    CONSTRAINT unique_campaign_recipient UNIQUE (campaign_id, recipient_id)
);

CREATE TABLE IF NOT EXISTS public.email_campaigns
(
    campaign_id uuid NOT NULL DEFAULT gen_random_uuid(),
    user_id uuid NOT NULL,
    campaign_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    subject_line character varying(255) COLLATE pg_catalog."default" NOT NULL,
    from_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    from_email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    reply_to_email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    scheduled_at timestamp with time zone,
    sent_at timestamp with time zone,
    status character varying(50) COLLATE pg_catalog."default" DEFAULT 'draft'::character varying,
    is_active boolean DEFAULT true,
    CONSTRAINT email_campaigns_pkey PRIMARY KEY (campaign_id)
);

CREATE TABLE IF NOT EXISTS public.email_templates
(
    template_id uuid NOT NULL DEFAULT gen_random_uuid(),
    user_id uuid NOT NULL,
    campaign_id uuid,
    template_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    html_content text COLLATE pg_catalog."default" NOT NULL,
    text_content text COLLATE pg_catalog."default",
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    is_active boolean DEFAULT true,
    CONSTRAINT email_templates_pkey PRIMARY KEY (template_id)
);

CREATE TABLE IF NOT EXISTS public.email_tracking
(
    tracking_id uuid NOT NULL DEFAULT gen_random_uuid(),
    campaign_id uuid NOT NULL,
    recipient_id uuid NOT NULL,
    email_status character varying(50) COLLATE pg_catalog."default" DEFAULT 'pending'::character varying,
    sent_at timestamp with time zone,
    delivered_at timestamp with time zone,
    opened_at timestamp with time zone,
    clicked_at timestamp with time zone,
    replied_at timestamp with time zone,
    bounced_at timestamp with time zone,
    tracking_pixel_id character varying(255) COLLATE pg_catalog."default",
    open_count integer DEFAULT 0,
    click_count integer DEFAULT 0,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    is_active boolean DEFAULT true,
    CONSTRAINT email_tracking_pkey PRIMARY KEY (tracking_id),
    CONSTRAINT email_tracking_tracking_pixel_id_key UNIQUE (tracking_pixel_id)
);

CREATE TABLE IF NOT EXISTS public.groups
(
    group_id uuid NOT NULL DEFAULT gen_random_uuid(),
    user_id uuid NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    is_active boolean DEFAULT true,
    CONSTRAINT groups_pkey PRIMARY KEY (group_id),
    CONSTRAINT unique_group_name_per_user UNIQUE (user_id, name)
);

CREATE TABLE IF NOT EXISTS public.recipients
(
    recipient_id uuid NOT NULL DEFAULT gen_random_uuid(),
    user_id uuid NOT NULL,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    first_name character varying(255) COLLATE pg_catalog."default",
    last_name character varying(255) COLLATE pg_catalog."default",
    company character varying(255) COLLATE pg_catalog."default",
    "position" character varying(255) COLLATE pg_catalog."default",
    custom_fields jsonb,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    is_active boolean DEFAULT true,
    group_id uuid,
    CONSTRAINT recipients_pkey PRIMARY KEY (recipient_id)
);

CREATE TABLE IF NOT EXISTS public.url_tracking
(
    url_tracking_id uuid NOT NULL DEFAULT gen_random_uuid(),
    tracking_id uuid NOT NULL,
    original_url text COLLATE pg_catalog."default" NOT NULL,
    tracking_url text COLLATE pg_catalog."default" NOT NULL,
    click_count integer DEFAULT 0,
    first_clicked_at timestamp with time zone,
    last_clicked_at timestamp with time zone,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    is_active boolean DEFAULT true,
    CONSTRAINT url_tracking_pkey PRIMARY KEY (url_tracking_id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    user_id uuid NOT NULL DEFAULT gen_random_uuid(),
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    password_hash character varying(255) COLLATE pg_catalog."default" NOT NULL,
    full_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    is_active boolean DEFAULT true,
    CONSTRAINT users_pkey PRIMARY KEY (user_id),
    CONSTRAINT users_email_key UNIQUE (email)
);

ALTER TABLE IF EXISTS public.campaign_groups
    ADD CONSTRAINT campaign_groups_campaign_id_fkey FOREIGN KEY (campaign_id)
    REFERENCES public.email_campaigns (campaign_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.campaign_groups
    ADD CONSTRAINT campaign_groups_group_id_fkey FOREIGN KEY (group_id)
    REFERENCES public.groups (group_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.campaign_recipients
    ADD CONSTRAINT campaign_recipients_campaign_id_fkey FOREIGN KEY (campaign_id)
    REFERENCES public.email_campaigns (campaign_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.campaign_recipients
    ADD CONSTRAINT campaign_recipients_recipient_id_fkey FOREIGN KEY (recipient_id)
    REFERENCES public.recipients (recipient_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.campaign_recipients
    ADD CONSTRAINT fk_campaign FOREIGN KEY (campaign_id)
    REFERENCES public.email_campaigns (campaign_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.campaign_recipients
    ADD CONSTRAINT fk_recipient FOREIGN KEY (recipient_id)
    REFERENCES public.recipients (recipient_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.email_campaigns
    ADD CONSTRAINT email_campaigns_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.email_campaigns
    ADD CONSTRAINT fk_user FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.email_templates
    ADD CONSTRAINT email_templates_campaign_id_fkey FOREIGN KEY (campaign_id)
    REFERENCES public.email_campaigns (campaign_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.email_templates
    ADD CONSTRAINT email_templates_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.email_templates
    ADD CONSTRAINT fk_campaign FOREIGN KEY (campaign_id)
    REFERENCES public.email_campaigns (campaign_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.email_templates
    ADD CONSTRAINT fk_user FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.email_tracking
    ADD CONSTRAINT email_tracking_campaign_id_fkey FOREIGN KEY (campaign_id)
    REFERENCES public.email_campaigns (campaign_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.email_tracking
    ADD CONSTRAINT email_tracking_recipient_id_fkey FOREIGN KEY (recipient_id)
    REFERENCES public.recipients (recipient_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.email_tracking
    ADD CONSTRAINT fk_campaign FOREIGN KEY (campaign_id)
    REFERENCES public.email_campaigns (campaign_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.email_tracking
    ADD CONSTRAINT fk_recipient FOREIGN KEY (recipient_id)
    REFERENCES public.recipients (recipient_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.groups
    ADD CONSTRAINT groups_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.recipients
    ADD CONSTRAINT fk_user FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.recipients
    ADD CONSTRAINT recipients_group_id_fkey FOREIGN KEY (group_id)
    REFERENCES public.groups (group_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.recipients
    ADD CONSTRAINT recipients_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.url_tracking
    ADD CONSTRAINT fk_tracking FOREIGN KEY (tracking_id)
    REFERENCES public.email_tracking (tracking_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.url_tracking
    ADD CONSTRAINT url_tracking_tracking_id_fkey FOREIGN KEY (tracking_id)
    REFERENCES public.email_tracking (tracking_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;
